- if user_signed_in?
	%div.paratitle 
		Make Prototypes Like this in a Matter of Weeks!

	%div.paragraph.span11 
		This guide is meant to help a non-technical founder get started quickly. Do you have an idea that you want to execute, but little to no background in software/web/mobile? This guide has all the information I've found, laid out in an organized manner, to solve the same problem for myself. Anyone can do it, and this guide will show you how. There are some very important things that I won’t cover here. I’m not trying to cover subjects that have already been covered by experts much greater than me (i.e. Steve Blank, Paul Graham, Eric Ries, etc.). Instead, I’ll briefly bring you up to speed on the subjects they already cover, and I’ll provide you with the resources that are already out there on these topics: customer development, the lean methodology, minimum viable products, and your company vision. This is all very important stuff! But I’m not the expert there yet, so I’ll help point you in the right direction.
		%p

		Where I’ll spend the most time is in educating you with my own experience: Starting with nothing but an idea, through the entire execution process, and delivering an end product: a website. And doing it all with no web experience to start out with. My route was not straightforward at all. I did it with perseverance mainly, and a lot of teaching myself things as I went along. Anyone can do it the same way I did, but if I could go back in time to 1 year ago and hand myself this guide I would do it in a heartbeat. This knowledge would have cut my time from 1 year to 3 months. Easily. I feel so fortunate to have this knowledge now, because the name of the startup game is “fast”, and I’d much rather take 3 months to find out if I have a success on my hands than 1 year. So let’s not waste any more time, let’s get started!
		%p
		%div.row
			%div{:style=>"text-align:center", :class=>"span8 offset1"}
				%div{:style=>"text-decoration:underline"}The End Goal:
				
				In 3 months time, I want a software product prototype on my hands. On my laptop, on my tablet, on my mobile phone. I want a product that I can demonstrate to my friends, to potential customers, to potential investors. I want a prototype. If a picture is worth a thousand words, a prototype is worth a million. I'm not trying to become a technical guru in the process, I'm becoming a product guru.
		%br
		%div
			%div
				1. The Idea
			
			The idea doesn't matter. A good idea won’t be a guaranteed success, and believe it or not, there have been plenty of “bad” ideas that were executed correctly and went on to be successful. As Paul Graham explains, there are only 3 things that matter: the people, the product, and your runway (I’m paraphrasing, but I’ll explain each one.)
			%p
			%div
				2. The People
			
			You are good people, you'll attract good people
			%p
			%div
				3. The Product
			
			Something Customers Want - This is important
			%p
			%div
				4. The Runway
			
			Don't spend your money - This is important
			%p
			%hr
			%p
		%div
			%p
			%div
				Business Model Canvas

			Link to business model canvas.
			Show an example canvas with examples from my business and other businesses.
			LeanLaunchLab exercise
			%p
			%div
				Customer Development

			Explanation of Customer development with links to Steve Blank’s and Eric Ries’s resources. Meetups/Social Networks/Quora/LinkedIn Groups. You need to meet like minded people.
			Give example from my own business.
			%p
			%div
				Minimum Viable Product

			Explain what this should look like and provide links to the appropriate resources online.
			Describe what the minimum viable product will look like for my business.
			%p
			%div
				Company Vision

			Description of vision and why this is important. Links to any relevant resources online. I hate when books describe concepts (especially abstract concepts like vision) and don’t give any examples for reference. So I’ll give you some awesome examples to think about whenever I can.
			%p
			A few things to think about: What is your vision for this company? Who are you targeting? What is the feeling you want to convey to your customers, through your website? Is it warmth and comfort? Is it performance and dependability? Is it competition, a sense of pride, or a sense of status? The purpose of this guide is not to lecture you about the vision of your company or project, but if you are developing something online, you will need to think about what message you want to convey to your customers, and what the design of your site should look like in order to convey this message.
			%p
			%hr
			%p
		%div.row
			%div{:style=>"text-align:center; background:lightblue", :class=>"span8 offset1"}
				%div{:style=>"text-decoration:underline"}
					Choose a Domain Name and Register it

				

				 
				%div{:style=>"text-decoration:underline"}
					Google Apps

				After you have a domain, set up Google Apps for email
		
		%p
		%hr
		%p
		%div
			%h2 Configure your Local Machine (fancy way of saying ‘your laptop’)

			Computer configuration isn't always the most fun, but don't worry, this is easy. And after it's done, the fun begins. You do actually have the choice of paying a friend to set this up for you if you have that option because you only have to do this once.

		%p
		%hr
		%p
		%div
			%div.paratitle
				Ruby on Rails, Git & Heroku
			Ruby on Rails:
			%P
			Git:
			%p
			Heroku
			%p
			Postgres
		%p
		%hr
		%p
		%div
			%div.paratitle
				Tools we'll use: Terminal & Text Editor
			Terminal:
			%P
			Sublime Text 2:
		%p
		%hr
		%p
		%div
			%div.paratitle
				Product Management
			The first thing to do after vetting an idea, validating assumptions and discussing with potential customers is to start designing the user interface. And when I say designing, I don’t mean anything technical at all; I’m talking about a pencil and a piece of paper. An idea is always amazing in your head, but it’s always a little blurry, slightly undefined, unrefined.Where do you start? If you start arbitrarily you’re going to have a nightmare project on your hands.

			 

			Start with the most obvious necessities of your website and write from the point of view of the user:

			“As a new user I want to sign up on the website so that I can access its features.”

			“As a new member of the site I want to host an event so that I can invite friends and collect payment.”

			“As an event host I want to invite guests so that they can RSVP.”

			“As an event host I want to send my guests invite emails, asking them to RSVP.”

			“As an event host I want to tie my event to a payment platform so that I can receive payments securely.”

			“As an event host I want to be able to set event details (date, time, location) so that my guests are aware.”

			“As an invitee I want to sign up through the email link so that I can RSVP.”

			“As a new member and invitee I want to RSVP and make payment so that I can come to the event.”

			“As an event host I want to see my list of RSVPs.”

			 

			What is described above is the most important functionality of my website. That is the minimally viable product. Without this functionality I don’t have a product, and if I add absolutely nothing else to it, I still have a product. This is what I need to produce first. But we still don’t start coding, we’re not even going to the computer yet. What does this look like? There are so many different ways to create this: In order to create an event, a new member could be lead through a series of event creation screens. This functionality is pretty common in a lot of online processes. Or maybe the new member would be lead directly to the final screen where he or she could edit by clicking various parts and bringing up popups. Don’t get caught up in the details of each, but try and understand that you can’t just go and start “coding”. Draw the thing first. Preferably on pieces of paper that you can crumple up and toss in wastebaskets. Frank Lloyd Wright once said, "You can use an eraser on the drafting table or a sledge hammer on the construction site."

			 
			When I begin coding I stop thinking about what functionality is useful and get into "make it work" mode. I'll spend a few hours making something work before I realize, maybe it wasn't that useful, or maybe it could have been accomplished in a simpler way. That's why it's better to think through the details before you begin coding.
			That’s what happens when you start coding. It’s pretty much inevitable. So what you need to do is take in the forest from afar. Study it. Get a good look at it and understand the big picture. What does your customer want to be able to do? What helps him or her do it best or fastest? What is necessary and what is uneccesary?

			 

			When you get the screens down on paper you can start to get a feel for how your customers will use it.

			Mockups - Designing/Mockups/wireframing - balsamiq, free options, pen and paper
		%p
		%hr
		%p
		%div
			%div.paratitle
				Time for a Decision
			You have a decision here based on a few things. The decision is, will you build the working prototype yourself or will you outsource it? There is not a right or wrong answer to this decision, there are just a few things to consider. 
			

- else 
	%div{:style=>"text-align:center"}
		%div{:style=>"text-align:center", :class=>"paragraph"}
			Sign in to get access to this guide.
		%div
			= link_to "Sign in", new_user_session_path, :class => "btn btn-primary btn-large"